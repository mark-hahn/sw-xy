

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Tue Dec 13 23:34:01 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F1459
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	dabs	1,0x7E,2
    22  0000                     	;# 
    23  0001                     	;# 
    24  0002                     	;# 
    25  0003                     	;# 
    26  0004                     	;# 
    27  0005                     	;# 
    28  0006                     	;# 
    29  0007                     	;# 
    30  0008                     	;# 
    31  0009                     	;# 
    32  000A                     	;# 
    33  000B                     	;# 
    34  000C                     	;# 
    35  000D                     	;# 
    36  000E                     	;# 
    37  0011                     	;# 
    38  0012                     	;# 
    39  0015                     	;# 
    40  0016                     	;# 
    41  0016                     	;# 
    42  0017                     	;# 
    43  0018                     	;# 
    44  0019                     	;# 
    45  001A                     	;# 
    46  001B                     	;# 
    47  001C                     	;# 
    48  008C                     	;# 
    49  008D                     	;# 
    50  008E                     	;# 
    51  0091                     	;# 
    52  0092                     	;# 
    53  0095                     	;# 
    54  0096                     	;# 
    55  0097                     	;# 
    56  0098                     	;# 
    57  0099                     	;# 
    58  009A                     	;# 
    59  009B                     	;# 
    60  009B                     	;# 
    61  009C                     	;# 
    62  009D                     	;# 
    63  009E                     	;# 
    64  009F                     	;# 
    65  010C                     	;# 
    66  010D                     	;# 
    67  010E                     	;# 
    68  0111                     	;# 
    69  0112                     	;# 
    70  0113                     	;# 
    71  0114                     	;# 
    72  0115                     	;# 
    73  0116                     	;# 
    74  0117                     	;# 
    75  0118                     	;# 
    76  0119                     	;# 
    77  011D                     	;# 
    78  018C                     	;# 
    79  018D                     	;# 
    80  018E                     	;# 
    81  0191                     	;# 
    82  0191                     	;# 
    83  0192                     	;# 
    84  0193                     	;# 
    85  0193                     	;# 
    86  0194                     	;# 
    87  0195                     	;# 
    88  0196                     	;# 
    89  0197                     	;# 
    90  0199                     	;# 
    91  019A                     	;# 
    92  019B                     	;# 
    93  019B                     	;# 
    94  019C                     	;# 
    95  019D                     	;# 
    96  019E                     	;# 
    97  019F                     	;# 
    98  020C                     	;# 
    99  020D                     	;# 
   100  0211                     	;# 
   101  0211                     	;# 
   102  0212                     	;# 
   103  0212                     	;# 
   104  0213                     	;# 
   105  0213                     	;# 
   106  0214                     	;# 
   107  0214                     	;# 
   108  0215                     	;# 
   109  0215                     	;# 
   110  0215                     	;# 
   111  0216                     	;# 
   112  0216                     	;# 
   113  0217                     	;# 
   114  0217                     	;# 
   115  0391                     	;# 
   116  0392                     	;# 
   117  0393                     	;# 
   118  0394                     	;# 
   119  0395                     	;# 
   120  0396                     	;# 
   121  039A                     	;# 
   122  039B                     	;# 
   123  0611                     	;# 
   124  0612                     	;# 
   125  0613                     	;# 
   126  0613                     	;# 
   127  0614                     	;# 
   128  0615                     	;# 
   129  0616                     	;# 
   130  0616                     	;# 
   131  0691                     	;# 
   132  0692                     	;# 
   133  0693                     	;# 
   134  0694                     	;# 
   135  0695                     	;# 
   136  0E8E                     	;# 
   137  0E8F                     	;# 
   138  0E90                     	;# 
   139  0E91                     	;# 
   140  0E92                     	;# 
   141  0E93                     	;# 
   142  0E94                     	;# 
   143  0E94                     	;# 
   144  0E95                     	;# 
   145  0E96                     	;# 
   146  0E97                     	;# 
   147  0E98                     	;# 
   148  0E99                     	;# 
   149  0E9A                     	;# 
   150  0E9B                     	;# 
   151  0E9C                     	;# 
   152  0E9D                     	;# 
   153  0E9E                     	;# 
   154  0E9F                     	;# 
   155  0FE4                     	;# 
   156  0FE5                     	;# 
   157  0FE6                     	;# 
   158  0FE7                     	;# 
   159  0FE8                     	;# 
   160  0FE9                     	;# 
   161  0FEA                     	;# 
   162  0FEB                     	;# 
   163  0FED                     	;# 
   164  0FEE                     	;# 
   165  0FEF                     	;# 
   166  0000                     	;# 
   167  0001                     	;# 
   168  0002                     	;# 
   169  0003                     	;# 
   170  0004                     	;# 
   171  0005                     	;# 
   172  0006                     	;# 
   173  0007                     	;# 
   174  0008                     	;# 
   175  0009                     	;# 
   176  000A                     	;# 
   177  000B                     	;# 
   178  000C                     	;# 
   179  000D                     	;# 
   180  000E                     	;# 
   181  0011                     	;# 
   182  0012                     	;# 
   183  0015                     	;# 
   184  0016                     	;# 
   185  0016                     	;# 
   186  0017                     	;# 
   187  0018                     	;# 
   188  0019                     	;# 
   189  001A                     	;# 
   190  001B                     	;# 
   191  001C                     	;# 
   192  008C                     	;# 
   193  008D                     	;# 
   194  008E                     	;# 
   195  0091                     	;# 
   196  0092                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009B                     	;# 
   205  009C                     	;# 
   206  009D                     	;# 
   207  009E                     	;# 
   208  009F                     	;# 
   209  010C                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  0111                     	;# 
   213  0112                     	;# 
   214  0113                     	;# 
   215  0114                     	;# 
   216  0115                     	;# 
   217  0116                     	;# 
   218  0117                     	;# 
   219  0118                     	;# 
   220  0119                     	;# 
   221  011D                     	;# 
   222  018C                     	;# 
   223  018D                     	;# 
   224  018E                     	;# 
   225  0191                     	;# 
   226  0191                     	;# 
   227  0192                     	;# 
   228  0193                     	;# 
   229  0193                     	;# 
   230  0194                     	;# 
   231  0195                     	;# 
   232  0196                     	;# 
   233  0197                     	;# 
   234  0199                     	;# 
   235  019A                     	;# 
   236  019B                     	;# 
   237  019B                     	;# 
   238  019C                     	;# 
   239  019D                     	;# 
   240  019E                     	;# 
   241  019F                     	;# 
   242  020C                     	;# 
   243  020D                     	;# 
   244  0211                     	;# 
   245  0211                     	;# 
   246  0212                     	;# 
   247  0212                     	;# 
   248  0213                     	;# 
   249  0213                     	;# 
   250  0214                     	;# 
   251  0214                     	;# 
   252  0215                     	;# 
   253  0215                     	;# 
   254  0215                     	;# 
   255  0216                     	;# 
   256  0216                     	;# 
   257  0217                     	;# 
   258  0217                     	;# 
   259  0391                     	;# 
   260  0392                     	;# 
   261  0393                     	;# 
   262  0394                     	;# 
   263  0395                     	;# 
   264  0396                     	;# 
   265  039A                     	;# 
   266  039B                     	;# 
   267  0611                     	;# 
   268  0612                     	;# 
   269  0613                     	;# 
   270  0613                     	;# 
   271  0614                     	;# 
   272  0615                     	;# 
   273  0616                     	;# 
   274  0616                     	;# 
   275  0691                     	;# 
   276  0692                     	;# 
   277  0693                     	;# 
   278  0694                     	;# 
   279  0695                     	;# 
   280  0E8E                     	;# 
   281  0E8F                     	;# 
   282  0E90                     	;# 
   283  0E91                     	;# 
   284  0E92                     	;# 
   285  0E93                     	;# 
   286  0E94                     	;# 
   287  0E94                     	;# 
   288  0E95                     	;# 
   289  0E96                     	;# 
   290  0E97                     	;# 
   291  0E98                     	;# 
   292  0E99                     	;# 
   293  0E9A                     	;# 
   294  0E9B                     	;# 
   295  0E9C                     	;# 
   296  0E9D                     	;# 
   297  0E9E                     	;# 
   298  0E9F                     	;# 
   299  0FE4                     	;# 
   300  0FE5                     	;# 
   301  0FE6                     	;# 
   302  0FE7                     	;# 
   303  0FE8                     	;# 
   304  0FE9                     	;# 
   305  0FEA                     	;# 
   306  0FEB                     	;# 
   307  0FED                     	;# 
   308  0FEE                     	;# 
   309  0FEF                     	;# 
   310                           
   311                           	psect	idataCOMMON
   312  00C9                     __pidataCOMMON:	
   313                           
   314                           ;initializer for _timerVal
   315  00C9  34A5               	retlw	165
   316                           
   317                           	psect	idataBANK0
   318  00A9                     __pidataBANK0:	
   319                           
   320                           ;initializer for _pwr2m1
   321  00A9  3400               	retlw	0
   322  00AA  3401               	retlw	1
   323  00AB  3403               	retlw	3
   324  00AC  3407               	retlw	7
   325  00AD  340F               	retlw	15
   326                           
   327                           ;initializer for _raStepCode
   328  00AE  3400               	retlw	0
   329  00AF  3410               	retlw	16
   330  00B0  3400               	retlw	0
   331  00B1  3410               	retlw	16
   332  00B2  3410               	retlw	16
   333                           
   334                           ;initializer for _rbStepCode
   335  00B3  3400               	retlw	0
   336  00B4  3400               	retlw	0
   337  00B5  3410               	retlw	16
   338  00B6  3410               	retlw	16
   339  00B7  3430               	retlw	48
   340                           
   341                           ;initializer for _rcStepCode
   342  00B8  3400               	retlw	0
   343  00B9  3480               	retlw	128
   344  00BA  3440               	retlw	64
   345  00BB  34C0               	retlw	192
   346  00BC  34C8               	retlw	200
   347  000C                     _PORTA	set	12
   348  000D                     _PORTB	set	13
   349  000E                     _PORTC	set	14
   350  006E                     _RB6	set	110
   351  006F                     _RB7	set	111
   352  0074                     _RC4	set	116
   353  0075                     _RC5	set	117
   354  005A                     _TMR0IF	set	90
   355  0099                     _OSCCON	set	153
   356  008E                     _TRISC	set	142
   357  04AD                     _TMR0CS	set	1197
   358  0465                     _TRISA5	set	1125
   359  046C                     _TRISB4	set	1132
   360  046D                     _TRISB5	set	1133
   361  046E                     _TRISB6	set	1134
   362  046F                     _TRISB7	set	1135
   363  0473                     _TRISC3	set	1139
   364  0474                     _TRISC4	set	1140
   365  0475                     _TRISC5	set	1141
   366  0476                     _TRISC6	set	1142
   367  0477                     _TRISC7	set	1143
   368  010E                     _LATC	set	270
   369                           
   370                           ; #config settings
   371  0000                     
   372                           	psect	cinit
   373  0015                     start_initialization:	
   374  0015                     __initialization:	
   375                           
   376                           ; Initialize objects allocated to COMMON
   377  0015  3180  20C9  3180   	fcall	__pidataCOMMON	;fetch initializer
   378  0018  00FC               	movwf	__pdataCOMMON& (0+127)
   379                           
   380                           ; Initialize objects allocated to BANK0
   381  0019  30A9               	movlw	low __pidataBANK0
   382  001A  0084               	movwf	4
   383  001B  3080               	movlw	(high __pidataBANK0)| (0+128)
   384  001C  0085               	movwf	5
   385  001D  3020               	movlw	low __pdataBANK0
   386  001E  0086               	movwf	6
   387  001F  3000               	movlw	high __pdataBANK0
   388  0020  0087               	movwf	7
   389  0021  3014               	movlw	20
   390  0022  3180  20BD  3180   	fcall	init_ram
   391                           
   392                           ; Clear objects allocated to COMMON
   393  0025  01FA               	clrf	__pbssCOMMON& (0+127)
   394  0026  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   395                           
   396                           ; Clear objects allocated to BANK0
   397  0027  3034               	movlw	low __pbssBANK0
   398  0028  0084               	movwf	4
   399  0029  3000               	movlw	high __pbssBANK0
   400  002A  0085               	movwf	5
   401  002B  3010               	movlw	16
   402  002C  3180  20C3         	fcall	clear_ram0
   403  002E                     end_of_initialization:	
   404                           ;End of C runtime variable initialization code
   405                           
   406  002E                     __end_of__initialization:	
   407  002E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   408  002F  0020               	movlb	0
   409  0030  3180  2869         	ljmp	_main	;jump to C main() function
   410                           
   411                           	psect	bssCOMMON
   412  007A                     __pbssCOMMON:	
   413  007A                     _homed:	
   414  007A                     	ds	1
   415  007B                     _moving:	
   416  007B                     	ds	1
   417                           
   418                           	psect	dataCOMMON
   419  007C                     __pdataCOMMON:	
   420  007C                     _timerVal:	
   421  007C                     	ds	1
   422                           
   423                           	psect	bssBANK0
   424  0034                     __pbssBANK0:	
   425  0034                     _moveElapsedTime:	
   426  0034                     	ds	4
   427  0038                     _posH:	
   428  0038                     	ds	2
   429  003A                     _posV:	
   430  003A                     	ds	2
   431  003C                     _speedH:	
   432  003C                     	ds	2
   433  003E                     _speedV:	
   434  003E                     	ds	2
   435  0040                     _tgtPosH:	
   436  0040                     	ds	2
   437  0042                     _tgtPosV:	
   438  0042                     	ds	2
   439                           
   440                           	psect	dataBANK0
   441  0020                     __pdataBANK0:	
   442  0020                     _pwr2m1:	
   443  0020                     	ds	5
   444  0025                     _raStepCode:	
   445  0025                     	ds	5
   446  002A                     _rbStepCode:	
   447  002A                     	ds	5
   448  002F                     _rcStepCode:	
   449  002F                     	ds	5
   450                           
   451                           	psect	inittext
   452  00BD                     init_ram:	
   453  00BD  00FE               	movwf	126
   454  00BE                     initloop:	
   455  00BE  0012               	moviw fsr0++
   456  00BF  001E               	movwi fsr1++
   457  00C0  0BFE               	decfsz	126,f
   458  00C1  28BE               	goto	initloop
   459  00C2  3400               	retlw	0
   460                           
   461                           	psect	clrtext
   462  00C3                     clear_ram0:	
   463                           ;	Called with FSR0 containing the base address, and
   464                           ;	WREG with the size to clear
   465                           
   466  00C3  0064               	clrwdt	;clear the watchdog before getting into this loop
   467  00C4                     clrloop0:	
   468  00C4  0180               	clrf	0	;clear RAM location pointed to by FSR
   469  00C5  3101               	addfsr 0,1
   470  00C6  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   471  00C7  28C4               	goto	clrloop0	;have we reached the end yet?
   472  00C8  3400               	retlw	0	;all done for this memory range, return
   473                           
   474                           	psect	cstackCOMMON
   475  0070                     __pcstackCOMMON:	
   476  0070                     ?_resetSteppers:	
   477  0070                     ?_initSteppers:	
   478                           ; 1 bytes @ 0x0
   479                           
   480  0070                     ?_setUstepH:	
   481                           ; 1 bytes @ 0x0
   482                           
   483  0070                     ?_stepperInt:	
   484                           ; 1 bytes @ 0x0
   485                           
   486  0070                     ??_stepperInt:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0070                     ?_all_ints:	
   490                           ; 1 bytes @ 0x0
   491                           
   492  0070                     ??_all_ints:	
   493                           ; 1 bytes @ 0x0
   494                           
   495  0070                     ?_main:	
   496                           ; 1 bytes @ 0x0
   497                           
   498                           
   499                           ; 1 bytes @ 0x0
   500  0070                     	ds	1
   501  0071                     ??_resetSteppers:	
   502  0071                     ??_initSteppers:	
   503                           ; 1 bytes @ 0x1
   504                           
   505  0071                     ??_setUstepH:	
   506                           ; 1 bytes @ 0x1
   507                           
   508                           
   509                           ; 1 bytes @ 0x1
   510  0071                     	ds	1
   511  0072                     setUstepH@x:	
   512                           
   513                           ; 1 bytes @ 0x2
   514  0072                     	ds	1
   515  0073                     setUstepH@latc:	
   516                           
   517                           ; 1 bytes @ 0x3
   518  0073                     	ds	1
   519  0074                     setUstepH@trisc:	
   520                           
   521                           ; 1 bytes @ 0x4
   522  0074                     	ds	1
   523  0075                     setUstepH@portc:	
   524                           
   525                           ; 1 bytes @ 0x5
   526  0075                     	ds	1
   527  0076                     setUstepH@code:	
   528                           
   529                           ; 1 bytes @ 0x6
   530  0076                     	ds	1
   531  0077                     setUstepH@ustep:	
   532                           
   533                           ; 1 bytes @ 0x7
   534  0077                     	ds	1
   535  0078                     ??_main:	
   536                           
   537                           ; 1 bytes @ 0x8
   538  0078                     	ds	2
   539                           
   540                           	psect	cstackBANK0
   541  0044                     __pcstackBANK0:	
   542  0044                     main@x:	
   543                           
   544                           ; 1 bytes @ 0x0
   545  0044                     	ds	1
   546                           
   547                           	psect	maintext
   548  0069                     __pmaintext:	
   549 ;;
   550 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   551 ;;
   552 ;; *************** function _main *****************
   553 ;; Defined at:
   554 ;;		line 82 in file "main-xy1.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;		None
   557 ;; Auto vars:     Size  Location     Type
   558 ;;  x               1    0[BANK0 ] unsigned char 
   559 ;; Return value:  Size  Location     Type
   560 ;;                  1    wreg      void 
   561 ;; Registers used:
   562 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   563 ;; Tracked objects:
   564 ;;		On entry : B1F/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   569 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
   570 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   571 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
   572 ;;Total ram usage:        3 bytes
   573 ;; Hardware stack levels required when called:    4
   574 ;; This function calls:
   575 ;;		_initSteppers
   576 ;;		_setUstepH
   577 ;; This function is called by:
   578 ;;		Startup code after reset
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           
   583                           ;psect for function _main
   584  0069                     _main:	
   585                           
   586                           ;main-xy1.c: 83: OSCCON = 0b01111000;
   587                           
   588                           ;incstack = 0
   589                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   590  0069  3078               	movlw	120
   591  006A  0021               	movlb	1	; select bank1
   592  006B  0099               	movwf	25	;volatile
   593                           
   594                           ;main-xy1.c: 84: initSteppers();
   595  006C  3180  2092  3180   	fcall	_initSteppers
   596                           
   597                           ;main-xy1.c: 91: TMR0CS = 0;
   598  006F  0021               	movlb	1	; select bank1
   599  0070  1295               	bcf	21,5	;volatile
   600                           
   601                           ;main-xy1.c: 100: setUstepH(4);
   602  0071  3004               	movlw	4
   603  0072  3180  2032  3180   	fcall	_setUstepH
   604  0075                     l703:	
   605                           ;main-xy1.c: 102: while (1) {
   606                           
   607                           
   608                           ;main-xy1.c: 103: _delay((unsigned long)((8)*(24000000/4000.0)));
   609  0075  303F               	movlw	63
   610  0076  00F9               	movwf	??_main+1
   611  0077  3055               	movlw	85
   612  0078  00F8               	movwf	??_main
   613  0079                     u167:	
   614  0079  0BF8               	decfsz	??_main,f
   615  007A  2879               	goto	u167
   616  007B  0BF9               	decfsz	??_main+1,f
   617  007C  2879               	goto	u167
   618                           
   619                           ;main-xy1.c: 104: uint8_t x = LATC;
   620  007D  0022               	movlb	2	; select bank2
   621  007E  080E               	movf	14,w	;volatile
   622  007F  00F8               	movwf	??_main
   623  0080  0878               	movf	??_main,w
   624  0081  0020               	movlb	0	; select bank0
   625  0082  00C4               	movwf	main@x
   626                           
   627                           ;main-xy1.c: 107: PORTC = (LATC & 0xf7) | 0;
   628  0083  0022               	movlb	2	; select bank2
   629  0084  080E               	movf	14,w	;volatile
   630  0085  39F7               	andlw	247
   631  0086  0020               	movlb	0	; select bank0
   632  0087  008E               	movwf	14	;volatile
   633                           
   634                           ;main-xy1.c: 108: _delay((unsigned long)((1)*(24000000/4000000.0)));
   635  0088  3200               	nop2	;2 cycle nop
   636  0089  3200               	nop2	;2 cycle nop
   637  008A  3200               	nop2	;2 cycle nop
   638                           
   639                           ;main-xy1.c: 109: PORTC = (LATC & 0xf7) | 1;
   640  008B  0022               	movlb	2	; select bank2
   641  008C  080E               	movf	14,w	;volatile
   642  008D  39F7               	andlw	247
   643  008E  3801               	iorlw	1
   644  008F  0020               	movlb	0	; select bank0
   645  0090  008E               	movwf	14	;volatile
   646  0091  2875               	goto	l703
   647  0092                     __end_of_main:	
   648                           
   649                           	psect	text1
   650  0032                     __ptext1:	
   651 ;; *************** function _setUstepH *****************
   652 ;; Defined at:
   653 ;;		line 23 in file "stepper.c"
   654 ;; Parameters:    Size  Location     Type
   655 ;;  ustep           1    wreg     unsigned char 
   656 ;; Auto vars:     Size  Location     Type
   657 ;;  ustep           1    7[COMMON] unsigned char 
   658 ;;  code            1    6[COMMON] unsigned char 
   659 ;;  portc           1    5[COMMON] unsigned char 
   660 ;;  trisc           1    4[COMMON] unsigned char 
   661 ;;  latc            1    3[COMMON] unsigned char 
   662 ;;  x               1    2[COMMON] unsigned char 
   663 ;; Return value:  Size  Location     Type
   664 ;;                  1    wreg      void 
   665 ;; Registers used:
   666 ;;		wreg, fsr1l, fsr1h, status,2, status,0
   667 ;; Tracked objects:
   668 ;;		On entry : 0/0
   669 ;;		On exit  : 0/0
   670 ;;		Unchanged: 0/0
   671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   673 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   674 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   675 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   676 ;;Total ram usage:        7 bytes
   677 ;; Hardware stack levels used:    1
   678 ;; Hardware stack levels required when called:    2
   679 ;; This function calls:
   680 ;;		Nothing
   681 ;; This function is called by:
   682 ;;		_main
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686                           
   687                           ;psect for function _setUstepH
   688  0032                     _setUstepH:	
   689                           
   690                           ;incstack = 0
   691                           ; Regs used in _setUstepH: [wreg+fsr1l+fsr1h+status,2+status,0]
   692                           ;setUstepH@ustep stored from wreg
   693  0032  00F7               	movwf	setUstepH@ustep
   694                           
   695                           ;stepper.c: 24: uint8_t x, latc=LATC, trisc=TRISC, portc=PORTC, code=rcStepCode[ustep];
   696  0033  0022               	movlb	2	; select bank2
   697  0034  080E               	movf	14,w	;volatile
   698  0035  00F1               	movwf	??_setUstepH
   699  0036  0871               	movf	??_setUstepH,w
   700  0037  00F3               	movwf	setUstepH@latc
   701  0038  0021               	movlb	1	; select bank1
   702  0039  080E               	movf	14,w	;volatile
   703  003A  00F1               	movwf	??_setUstepH
   704  003B  0871               	movf	??_setUstepH,w
   705  003C  00F4               	movwf	setUstepH@trisc
   706  003D  0020               	movlb	0	; select bank0
   707  003E  080E               	movf	14,w	;volatile
   708  003F  00F1               	movwf	??_setUstepH
   709  0040  0871               	movf	??_setUstepH,w
   710  0041  00F5               	movwf	setUstepH@portc
   711  0042  0877               	movf	setUstepH@ustep,w
   712  0043  3E2F               	addlw	(low (_rcStepCode| 0))& (0+255)
   713  0044  0086               	movwf	6
   714  0045  0187               	clrf	7
   715  0046  0801               	movf	1,w
   716  0047  00F1               	movwf	??_setUstepH
   717  0048  0871               	movf	??_setUstepH,w
   718  0049  00F6               	movwf	setUstepH@code
   719                           
   720                           ;stepper.c: 25: LATC = x = (LATC & !0b11001000) | rcStepCode[ustep];
   721  004A  0877               	movf	setUstepH@ustep,w
   722  004B  3E2F               	addlw	(low (_rcStepCode| 0))& (0+255)
   723  004C  0086               	movwf	6
   724  004D  0187               	clrf	7
   725  004E  0801               	movf	1,w
   726  004F  00F2               	movwf	setUstepH@x
   727  0050  0022               	movlb	2	; select bank2
   728  0051  008E               	movwf	14	;volatile
   729                           
   730                           ;stepper.c: 26: latc=LATC, trisc=TRISC, portc=PORTC, code=rcStepCode[ustep];
   731  0052  080E               	movf	14,w	;volatile
   732  0053  00F1               	movwf	??_setUstepH
   733  0054  0871               	movf	??_setUstepH,w
   734  0055  00F3               	movwf	setUstepH@latc
   735  0056  0021               	movlb	1	; select bank1
   736  0057  080E               	movf	14,w	;volatile
   737  0058  00F1               	movwf	??_setUstepH
   738  0059  0871               	movf	??_setUstepH,w
   739  005A  00F4               	movwf	setUstepH@trisc
   740  005B  0020               	movlb	0	; select bank0
   741  005C  080E               	movf	14,w	;volatile
   742  005D  00F1               	movwf	??_setUstepH
   743  005E  0871               	movf	??_setUstepH,w
   744  005F  00F5               	movwf	setUstepH@portc
   745  0060  0877               	movf	setUstepH@ustep,w
   746  0061  3E2F               	addlw	(low (_rcStepCode| 0))& (0+255)
   747  0062  0086               	movwf	6
   748  0063  0187               	clrf	7
   749  0064  0801               	movf	1,w
   750  0065  00F1               	movwf	??_setUstepH
   751  0066  0871               	movf	??_setUstepH,w
   752  0067  00F6               	movwf	setUstepH@code
   753  0068  0008               	return
   754  0069                     __end_of_setUstepH:	
   755                           
   756                           	psect	text2
   757  0092                     __ptext2:	
   758 ;; *************** function _initSteppers *****************
   759 ;; Defined at:
   760 ;;		line 15 in file "stepper.c"
   761 ;; Parameters:    Size  Location     Type
   762 ;;		None
   763 ;; Auto vars:     Size  Location     Type
   764 ;;		None
   765 ;; Return value:  Size  Location     Type
   766 ;;                  1    wreg      void 
   767 ;; Registers used:
   768 ;;		status,2, status,0, pclath, cstack
   769 ;; Tracked objects:
   770 ;;		On entry : 0/0
   771 ;;		On exit  : 0/0
   772 ;;		Unchanged: 0/0
   773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   778 ;;Total ram usage:        0 bytes
   779 ;; Hardware stack levels used:    1
   780 ;; Hardware stack levels required when called:    3
   781 ;; This function calls:
   782 ;;		_resetSteppers
   783 ;; This function is called by:
   784 ;;		_main
   785 ;; This function uses a non-reentrant model
   786 ;;
   787                           
   788                           
   789                           ;psect for function _initSteppers
   790  0092                     _initSteppers:	
   791                           
   792                           ;stepper.c: 16: RC4 = RB6 = 1;
   793                           
   794                           ;incstack = 0
   795                           ; Regs used in _initSteppers: [status,2+status,0+pclath+cstack]
   796  0092  0020               	movlb	0	; select bank0
   797  0093  170D               	bsf	13,6	;volatile
   798  0094  1F0D               	btfss	13,6	;volatile
   799  0095  2899               	goto	u140
   800  0096  0020               	movlb	0	; select bank0
   801  0097  160E               	bsf	14,4	;volatile
   802  0098  289B               	goto	u154
   803  0099                     u140:	
   804  0099  0020               	movlb	0	; select bank0
   805  009A  120E               	bcf	14,4	;volatile
   806  009B                     u154:	
   807                           
   808                           ;stepper.c: 17: TRISC7 = TRISC6 = TRISC3 = TRISC5 = TRISC4 = 0;
   809  009B  0021               	movlb	1	; select bank1
   810  009C  120E               	bcf	14,4	;volatile
   811  009D  128E               	bcf	14,5	;volatile
   812  009E  118E               	bcf	14,3	;volatile
   813  009F  130E               	bcf	14,6	;volatile
   814  00A0  138E               	bcf	14,7	;volatile
   815                           
   816                           ;stepper.c: 18: TRISA5 = TRISB4 = TRISB5 = TRISB7 = TRISB6 = 0;
   817  00A1  130D               	bcf	13,6	;volatile
   818  00A2  138D               	bcf	13,7	;volatile
   819  00A3  128D               	bcf	13,5	;volatile
   820  00A4  120D               	bcf	13,4	;volatile
   821  00A5  128C               	bcf	12,5	;volatile
   822                           
   823                           ;stepper.c: 20: resetSteppers();
   824  00A6  3180  20CA         	fcall	_resetSteppers
   825  00A8  0008               	return
   826  00A9                     __end_of_initSteppers:	
   827                           
   828                           	psect	text3
   829  00CA                     __ptext3:	
   830 ;; *************** function _resetSteppers *****************
   831 ;; Defined at:
   832 ;;		line 58 in file "stepper.c"
   833 ;; Parameters:    Size  Location     Type
   834 ;;		None
   835 ;; Auto vars:     Size  Location     Type
   836 ;;		None
   837 ;; Return value:  Size  Location     Type
   838 ;;                  1    wreg      void 
   839 ;; Registers used:
   840 ;;		None
   841 ;; Tracked objects:
   842 ;;		On entry : 0/0
   843 ;;		On exit  : 0/0
   844 ;;		Unchanged: 0/0
   845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   850 ;;Total ram usage:        0 bytes
   851 ;; Hardware stack levels used:    1
   852 ;; Hardware stack levels required when called:    2
   853 ;; This function calls:
   854 ;;		Nothing
   855 ;; This function is called by:
   856 ;;		_initSteppers
   857 ;;		_atHome
   858 ;;		_lostPos
   859 ;; This function uses a non-reentrant model
   860 ;;
   861                           
   862                           
   863                           ;psect for function _resetSteppers
   864  00CA                     _resetSteppers:	
   865                           
   866                           ;incstack = 0
   867                           ; Regs used in _resetSteppers: []
   868  00CA  0008               	return
   869  00CB                     __end_of_resetSteppers:	
   870                           
   871                           	psect	intentry
   872  0004                     __pintentry:	
   873 ;; *************** function _all_ints *****************
   874 ;; Defined at:
   875 ;;		line 75 in file "main-xy1.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;		None
   878 ;; Auto vars:     Size  Location     Type
   879 ;;		None
   880 ;; Return value:  Size  Location     Type
   881 ;;                  1    wreg      void 
   882 ;; Registers used:
   883 ;;		status,2, status,0, pclath, cstack
   884 ;; Tracked objects:
   885 ;;		On entry : 0/0
   886 ;;		On exit  : 0/0
   887 ;;		Unchanged: 0/0
   888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   891 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   892 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   893 ;;Total ram usage:        1 bytes
   894 ;; Hardware stack levels used:    1
   895 ;; Hardware stack levels required when called:    1
   896 ;; This function calls:
   897 ;;		_stepperInt
   898 ;; This function is called by:
   899 ;;		Interrupt level 1
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903  0004                     _all_ints:	
   904                           
   905                           ;incstack = 0
   906  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
   907                           
   908                           ; Regs used in _all_ints: [status,2+status,0+pclath+cstack]
   909  0005  3180               	pagesel	$
   910  0006  0020               	movlb	0	; select bank0
   911  0007  087F               	movf	127,w
   912  0008  00F0               	movwf	??_all_ints
   913                           
   914                           ;main-xy1.c: 76: if (TMR0IF) {
   915  0009  1D0B               	btfss	11,2	;volatile
   916  000A  280E               	goto	i1l70
   917                           
   918                           ;main-xy1.c: 77: TMR0IF = 0;
   919  000B  110B               	bcf	11,2	;volatile
   920                           
   921                           ;main-xy1.c: 78: stepperInt();
   922  000C  3180  20CB         	fcall	_stepperInt
   923  000E                     i1l70:	
   924  000E  0870               	movf	??_all_ints,w
   925  000F  0020               	movlb	0	; select bank0
   926  0010  00FF               	movwf	127
   927  0011  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   928  0012  0009               	retfie
   929  0013                     __end_of_all_ints:	
   930                           
   931                           	psect	text5
   932  00CB                     __ptext5:	
   933 ;; *************** function _stepperInt *****************
   934 ;; Defined at:
   935 ;;		line 70 in file "main-xy1.c"
   936 ;; Parameters:    Size  Location     Type
   937 ;;		None
   938 ;; Auto vars:     Size  Location     Type
   939 ;;		None
   940 ;; Return value:  Size  Location     Type
   941 ;;                  1    wreg      void 
   942 ;; Registers used:
   943 ;;		None
   944 ;; Tracked objects:
   945 ;;		On entry : 0/0
   946 ;;		On exit  : 0/0
   947 ;;		Unchanged: 0/0
   948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   953 ;;Total ram usage:        0 bytes
   954 ;; Hardware stack levels used:    1
   955 ;; This function calls:
   956 ;;		Nothing
   957 ;; This function is called by:
   958 ;;		_all_ints
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           
   963                           ;psect for function _stepperInt
   964  00CB                     _stepperInt:	
   965                           
   966                           ;incstack = 0
   967                           ; Regs used in _stepperInt: []
   968  00CB  0008               	return
   969  00CC                     __end_of_stepperInt:	
   970  007E                     btemp	set	126	;btemp
   971  007E                     int$flags	set	126
   972  007E                     wtemp	set	126
   973  007E                     wtemp0	set	126
   974  0080                     wtemp1	set	128
   975  0082                     wtemp2	set	130
   976  0084                     wtemp3	set	132
   977  0086                     wtemp4	set	134
   978  0088                     wtemp5	set	136
   979  007F                     wtemp6	set	127
   980  007E                     ttemp	set	126
   981  007E                     ttemp0	set	126
   982  0081                     ttemp1	set	129
   983  0084                     ttemp2	set	132
   984  0087                     ttemp3	set	135
   985  007F                     ttemp4	set	127
   986  007E                     ltemp	set	126
   987  007E                     ltemp0	set	126
   988  0082                     ltemp1	set	130
   989  0086                     ltemp2	set	134
   990  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        21
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      13
    BANK0            80      1      37
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_setUstepH

Critical Paths under _all_ints in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _all_ints in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _all_ints in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _all_ints in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _all_ints in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _all_ints in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _all_ints in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _all_ints in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _all_ints in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _all_ints in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _all_ints in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _all_ints in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _all_ints in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _all_ints in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     123
                                              8 COMMON     2     2      0
                                              0 BANK0      1     1      0
                       _initSteppers
                          _setUstepH
 ---------------------------------------------------------------------------------
 (1) _setUstepH                                            7     7      0     120
                                              1 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (1) _initSteppers                                         0     0      0       0
                      _resetSteppers
 ---------------------------------------------------------------------------------
 (2) _resetSteppers                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _all_ints                                             1     1      0       0
                                              0 COMMON     1     1      0
                         _stepperInt
 ---------------------------------------------------------------------------------
 (4) _stepperInt                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initSteppers
     _resetSteppers
   _setUstepH

 _all_ints (ROOT)
   _stepperInt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      1      25       5       46.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      32      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      32      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Tue Dec 13 23:34:01 2016

            __CFG_CP$OFF 0000                      l703 0075                      _RC4 0074  
                    _RB6 006E                      _RC5 0075                      _RB7 006F  
                    u140 0099                      u154 009B                      u167 0079  
           __CFG_BORV$LO 0000                      wreg 0009             __CFG_LVP$OFF 0000  
                   _LATC 010E                     i1l70 000E             __CFG_WRT$OFF 0000  
                   _main 0069                     _posH 0038                     _posV 003A  
                   fsr0h 0005                     fsr1h 0007                     fsr0l 0004  
                   indf0 0000                     indf1 0001                     fsr1l 0006  
                   btemp 007E            __CFG_BOREN$ON 0000                     ltemp 007E  
                   start 0013                     ttemp 007E                     wtemp 007E  
          __CFG_IESO$OFF 0000            __CFG_MCLRE$ON 0000                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _PORTA 000C                    _PORTB 000D  
                  _PORTC 000E                    _TRISC 008E           __CFG_FCMEN$OFF 0000  
                  _homed 007A                    main@x 0044                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
        __initialization 0015             __end_of_main 0092           __CFG_LPBOR$OFF 0000  
                 ??_main 0078      __CFG_USBLSCLK$48MHz 0000            ?_initSteppers 0070  
                 _OSCCON 0099                   _TMR0IF 005A                   _TMR0CS 04AD  
                 _TRISA5 0465                   _TRISB4 046C                   _TRISC3 0473  
                 _TRISB5 046D                   _TRISC4 0474                   _TRISB6 046E  
                 _TRISC5 0475                   _TRISB7 046F                   _TRISC6 0476  
                 _TRISC7 0477         __end_of_all_ints 0013           __CFG_PWRTE$OFF 0000  
         __CFG_STVREN$ON 0000                   _pwr2m1 0020                   _moving 007B  
                 _speedH 003C                   _speedV 003E             __pdataCOMMON 007C  
         ??_initSteppers 0071    __end_of_resetSteppers 00CB  __end_of__initialization 002E  
         __pcstackCOMMON 0070             __pidataBANK0 00A9               __pbssBANK0 0034  
         setUstepH@portc 0075           setUstepH@trisc 0074           setUstepH@ustep 0077  
             __pmaintext 0069          __CFG_PLLMULT$3x 0000               __pintentry 0004  
     __size_of_setUstepH 0037                ?_all_ints 0070          _moveElapsedTime 0034  
             _raStepCode 0025               _rbStepCode 002A               _rcStepCode 002F  
   __end_of_initSteppers 00A9                  __ptext1 0032                  __ptext2 0092  
                __ptext3 00CA                  __ptext5 00CB               ??_all_ints 0070  
                _tgtPosH 0040                  _tgtPosV 0042                  clrloop0 00C4  
   end_of_initialization 002E                  init_ram 00BD        __end_of_setUstepH 0069  
                initloop 00BE         __CFG_FOSC$INTOSC 0000               _stepperInt 00CB  
     __CFG_PLLEN$ENABLED 0000            __pidataCOMMON 00C9      start_initialization 0015  
  __size_of_initSteppers 0017   __size_of_resetSteppers 0001              __pdataBANK0 0020  
            __pbssCOMMON 007A                ___latbits 0002            __pcstackBANK0 0044  
           _initSteppers 0092        __size_of_all_ints 000F              ?_stepperInt 0070  
          setUstepH@code 0076            setUstepH@latc 0073            _resetSteppers 00CA  
             setUstepH@x 0072                clear_ram0 00C3                _setUstepH 0032  
    __size_of_stepperInt 0001           ?_resetSteppers 0070               ?_setUstepH 0070  
               _all_ints 0004            __size_of_main 0029                 _timerVal 007C  
               int$flags 007E          ??_resetSteppers 0071                 intlevel1 0000  
           ??_stepperInt 0070        __CFG_CLKOUTEN$OFF 0000              ??_setUstepH 0071  
   __CFG_CPUDIV$NOCLKDIV 0000       __end_of_stepperInt 00CC  
